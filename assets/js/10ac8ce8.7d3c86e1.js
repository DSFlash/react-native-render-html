(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1625],{3022:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return d},toc:function(){return o},default:function(){return m}});var a=n(7560),r=n(8283),l=(n(2784),n(9037)),i={id:"migration-guide",description:"A guide to migrate React Native Render HTML from v5 to v6.",sidebar_position:10},d={unversionedId:"migration-guide",id:"migration-guide",isDocsHomePage:!1,title:"Migrating to v6",description:"A guide to migrate React Native Render HTML from v5 to v6.",source:"@site/docs/migration-guide.mdx",sourceDirName:".",slug:"/migration-guide",permalink:"/react-native-render-html/docs/migration-guide",version:"current",sidebarPosition:10,frontMatter:{id:"migration-guide",description:"A guide to migrate React Native Render HTML from v5 to v6.",sidebar_position:10},sidebar:"docSidebar",previous:{title:"FAQ",permalink:"/react-native-render-html/docs/faq"}},o=[{value:"Props",id:"props",children:[{value:"Props to Monitor",id:"props-to-monitor",children:[]},{value:"Renamed and Moved Props",id:"renamed-and-moved-props",children:[]},{value:"Discontinued Props",id:"discontinued-props",children:[]},{value:"Other Props",id:"other-props",children:[]}]},{value:"Migrating Custom Renderers",id:"migrating-custom-renderers",children:[{value:"Arguments Equivalence",id:"arguments-equivalence",children:[]},{value:"Custom Tags",id:"custom-tags",children:[]}]},{value:"Other Exports",id:"other-exports",children:[]}],p={toc:o};function m(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"V6 is a brand new rewrite of the library, bringing amazing new features such as\nwhitespace collapsing, list style type support, and enhanced performances.\nHowever, it will take some work to migrate your project to support the new API."))),(0,l.kt)("h2",{id:"props"},"Props"),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"A good amount of props have had their name changes, while their behavior is\nsimilar or equivalent. The biggest endeavor will be to ",(0,l.kt)("a",{parentName:"p",href:"#migrate-custom-renderers"},"migrate custom\nrenderers"),"."))),(0,l.kt)("h3",{id:"props-to-monitor"},"Props to Monitor"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"renderers")),(0,l.kt)("td",{parentName:"tr",align:null},"Each renderer function should be converted to a React Component. See ",(0,l.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/guides/custom-renderers"},"Custom Rendering guide")," and the below section, ",(0,l.kt)("a",{parentName:"td",href:"#migrating-custom-renderers"},"Migrating Custom Renderers"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"renderersProps")),(0,l.kt)("td",{parentName:"tr",align:null},"To access those props from a custom renderer, you should now use ",(0,l.kt)("inlineCode",{parentName:"td"},"useRendererProps")," hook.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"source")),(0,l.kt)("td",{parentName:"tr",align:null},"A new type of source is available, ",(0,l.kt)("inlineCode",{parentName:"td"},"source.dom"),". See ",(0,l.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/guides/dom-tampering#prerendering"},"DOM Tampering")," for a use case.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"computeEmbeddedMaxWidth")),(0,l.kt)("td",{parentName:"tr",align:null},"You can now take advantage of ",(0,l.kt)("inlineCode",{parentName:"td"},"useComputeMaxWidthForTag")," hook to consume max width from custom renderers.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tagsStyles")),(0,l.kt)("td",{parentName:"tr",align:null},"Those styles are now mixed styles records, which are unlikely to break. See ",(0,l.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/guides/styling"},"Styling Components"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"classesStyles")),(0,l.kt)("td",{parentName:"tr",align:null},"Those styles are now mixed styles records, which are unlikely to break. See ",(0,l.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/guides/styling"},"Styling Components"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"allowedStyles")),(0,l.kt)("td",{parentName:"tr",align:null},"CSS properties are now camelCased.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ignoredStyles")),(0,l.kt)("td",{parentName:"tr",align:null},"CSS properties are now camelCased.")))),(0,l.kt)("h3",{id:"renamed-and-moved-props"},"Renamed and Moved Props"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"v5"),(0,l.kt)("th",{parentName:"tr",align:null},"v6"),(0,l.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"enableExperimentalPercentWidth")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"renderersProps.img.enableExperimentalPercentWidth")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"imagesInitialDimensions")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"renderersProps.img.initialDimensions ")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"onLinkPress")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"renderersProps.a.onPress")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"onParsed")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"onTTreeUpdate")),(0,l.kt)("td",{parentName:"tr",align:null},"The structure has changed. See ",(0,l.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/flow/transient-render-engine"},"Transient Render Engine"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"listsPrefixesRenderers")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"customListStyleSpecs")),(0,l.kt)("td",{parentName:"tr",align:null},"The API has changed, see ",(0,l.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/content/lists#defining-and-customizing-markers-pseudo-elements"},"Lists, customization"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ignoredTags")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ignoredDomTags")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ignoreNodesFunction")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ignoreDomNode")),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"discontinued-props"},"Discontinued Props"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"containerStyle")),(0,l.kt)("td",{parentName:"tr",align:null},"You can use ",(0,l.kt)("inlineCode",{parentName:"td"},"baseStyles")," instead.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"customWrapper")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ptSize")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"baseFontStyle")),(0,l.kt)("td",{parentName:"tr",align:null},"You can use ",(0,l.kt)("inlineCode",{parentName:"td"},"baseStyles")," instead.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"alterData")),(0,l.kt)("td",{parentName:"tr",align:null},"You can use ",(0,l.kt)("inlineCode",{parentName:"td"},"domVisitors.onText")," instead. See ",(0,l.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/guides/dom-tampering#example-altering-data"},"Dom Tampering"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"alterChildren")),(0,l.kt)("td",{parentName:"tr",align:null},"You can use ",(0,l.kt)("inlineCode",{parentName:"td"},"domVisitors.onElement")," instead. See ",(0,l.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/guides/dom-tampering#example-inserting-elements"},"Dom Tampering"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"alterNode")),(0,l.kt)("td",{parentName:"tr",align:null},"You can use ",(0,l.kt)("inlineCode",{parentName:"td"},"domVisitors.onElement")," instead. See ",(0,l.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/guides/dom-tampering#example-removing-elements"},"Dom Tampering"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"allowWhitespaceNodes")),(0,l.kt)("td",{parentName:"tr",align:null},"White-space collapsing is now fully supported. See ",(0,l.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/flow/transient-render-engine#whitespace-collapsing"},"Transient Render Engine, whitespace collapsing"),".")))),(0,l.kt)("h3",{id:"other-props"},"Other Props"),(0,l.kt)("p",null,"Props not listed in the above section are unchanged."),(0,l.kt)("h2",{id:"migrating-custom-renderers"},"Migrating Custom Renderers"),(0,l.kt)("h3",{id:"arguments-equivalence"},"Arguments Equivalence"),(0,l.kt)("p",null,"Let's start with a custom renderer from v5:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="renderers.jsx"',title:'"renderers.jsx"'},"const renderers = {\n  hr: (htmlAttribs, children, convertedCSSStyles, passProps) => {\n    return /* Whatever */;\n  }\n};\n")),(0,l.kt)("p",null,"In v6, renderers are React components:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="renderers.jsx"',title:'"renderers.jsx"'},"const renderers = {\n  hr: ({\n    tnode,\n    key,\n    onPress,\n    propsFromParent,\n    sharedProps,\n    style,\n    textProps,\n    type,\n    viewProps,\n    InternalRenderer,\n    TDefaultRenderer\n  }) => {\n    return /* Whatever */;\n  }\n};\n")),(0,l.kt)("p",null,"Let's see now how arguments map from v5 to v6:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Argument (v5)"),(0,l.kt)("th",{parentName:"tr",align:null},"Prop Name (v6)"),(0,l.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"htmlAttribs")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tnode.attributes")),(0,l.kt)("td",{parentName:"tr",align:null},"The TNode is the intermediary representation of the element to render. See ",(0,l.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/architecture"},"Architecture"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"children")),(0,l.kt)("td",{parentName:"tr",align:null},"Alternative exists."),(0,l.kt)("td",{parentName:"tr",align:null},"You can still render children. However, instead of having access to the children as React elements, you can inspect ",(0,l.kt)("inlineCode",{parentName:"td"},"tnode.children")," and render these with ",(0,l.kt)("inlineCode",{parentName:"td"},"TNodeChildrenRenderer"),". This is much more flexible than the legacy API. See ",(0,l.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/guides/custom-renderers"},"Custom Rendering"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"convertedCSSStyles")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"style")),(0,l.kt)("td",{parentName:"tr",align:null},"Those styles are flatten and can be easily inspected.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"passProps.renderersProps")),(0,l.kt)("td",{parentName:"tr",align:null},"Alternative exists."),(0,l.kt)("td",{parentName:"tr",align:null},"You can access renderers prop for a specific tag via ",(0,l.kt)("inlineCode",{parentName:"td"},"useRendererProps")," hook.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"passProps.nodeIndex")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tnode.nodeIndex")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"passProps.transientChildren")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tnode.children")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"passProps.domNode")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tnode.domNode")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"passProps.parentWrapper")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"type")),(0,l.kt)("td",{parentName:"tr",align:null},"Either ",(0,l.kt)("inlineCode",{parentName:"td"},'"text"')," or ",(0,l.kt)("inlineCode",{parentName:"td"},'"block"'),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"passProps.data")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tnode.data")),(0,l.kt)("td",{parentName:"tr",align:null},"Available when ",(0,l.kt)("inlineCode",{parentName:"td"},"tnode.type === 'text'"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"passProps.key")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"key")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"passProps.parentTag")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tnode.parent.tagName")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"passProps.onLinkPress")),(0,l.kt)("td",{parentName:"tr",align:null},"Alternative exists."),(0,l.kt)("td",{parentName:"tr",align:null},"You can access this prop via ",(0,l.kt)("inlineCode",{parentName:"td"},"useRendererProps('a').onPress"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"passProps.tagsStyles")),(0,l.kt)("td",{parentName:"tr",align:null},"No Equivalent."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"passProps.classesStyles")),(0,l.kt)("td",{parentName:"tr",align:null},"No Equivalent."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"passProps.defaultTextProps")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"textProps")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"passProps"),".",(0,l.kt)("wbr",null),(0,l.kt)("inlineCode",{parentName:"td"},"defaultWebViewProps")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"sharedProps"),".",(0,l.kt)("wbr",null),(0,l.kt)("inlineCode",{parentName:"td"},"defaultWebViewProps")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"passProps"),".",(0,l.kt)("wbr",null),(0,l.kt)("inlineCode",{parentName:"td"},"computeEmbeddedMaxWidth")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"sharedProps"),".",(0,l.kt)("wbr",null),(0,l.kt)("inlineCode",{parentName:"td"},"computeEmbeddedMaxWidth")),(0,l.kt)("td",{parentName:"tr",align:null},"A better option is to take advantage of ",(0,l.kt)("inlineCode",{parentName:"td"},"useComputeMaxWidthForTag")," hook.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"passProps.contentWidth")),(0,l.kt)("td",{parentName:"tr",align:null},"Alternative exists."),(0,l.kt)("td",{parentName:"tr",align:null},"Access content width via ",(0,l.kt)("inlineCode",{parentName:"td"},"useContentWidth")," hook.")))),(0,l.kt)("h3",{id:"custom-tags"},"Custom Tags"),(0,l.kt)("p",null,"Let's say we registered a renderer for ",(0,l.kt)("inlineCode",{parentName:"p"},"<bluecircle>")," tag, which is non-standard. In v6, we must also register the ",(0,l.kt)("strong",{parentName:"p"},"element model")," for this tag.\nSee ",(0,l.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/guides/custom-renderers#example-registering-a-new-tag"},"Custom Rendering, registering a new tag"),"."),(0,l.kt)("h2",{id:"other-exports"},"Other Exports"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Export"),(0,l.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"getParentsTagsRecursively")),(0,l.kt)("td",{parentName:"tr",align:null},"Discontinued.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"getClosestNodeParentByTag")),(0,l.kt)("td",{parentName:"tr",align:null},"Discontinued.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"constructStyles")),(0,l.kt)("td",{parentName:"tr",align:null},"Discontinued. Not applicable since the styling logic has been totaly reframed and should be much more consistent.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"domNodeToHTMLString")),(0,l.kt)("td",{parentName:"tr",align:null},"Unchanged.")))))}m.isMDXComponent=!0}}]);