(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4983],{9037:function(e,t,n){"use strict";n.d(t,{Zo:function(){return Oe},kt:function(){return He}});var r=n(2784),a="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self?self:{};function i(e){var t={exports:{}};return e(t,t.exports),t.exports}var l=function(e){return e&&e.Math==Math&&e},s=l("object"==typeof globalThis&&globalThis)||l("object"==typeof window&&window)||l("object"==typeof self&&self)||l("object"==typeof a&&a)||function(){return this}()||Function("return this")(),p=function(e){try{return!!e()}catch(e){return!0}},o=!p((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),d={}.propertyIsEnumerable,m=Object.getOwnPropertyDescriptor,c={f:m&&!d.call({1:2},1)?function(e){var t=m(this,e);return!!t&&t.enumerable}:d},h=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},k={}.toString,u="".split,f=p((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==function(e){return k.call(e).slice(8,-1)}(e)?u.call(e,""):Object(e)}:Object,g=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e},N=function(e){return f(g(e))},b=function(e){return"object"==typeof e?null!==e:"function"==typeof e},y=function(e,t){if(!b(e))return e;var n,r;if(t&&"function"==typeof(n=e.toString)&&!b(r=n.call(e)))return r;if("function"==typeof(n=e.valueOf)&&!b(r=n.call(e)))return r;if(!t&&"function"==typeof(n=e.toString)&&!b(r=n.call(e)))return r;throw TypeError("Can't convert object to primitive value")},v={}.hasOwnProperty,C=function(e,t){return v.call(e,t)},w=s.document,T=b(w)&&b(w.createElement),S=!o&&!p((function(){return 7!=Object.defineProperty(T?w.createElement("div"):{},"a",{get:function(){return 7}}).a})),L=Object.getOwnPropertyDescriptor,M={f:o?L:function(e,t){if(e=N(e),t=y(t,!0),S)try{return L(e,t)}catch(e){}if(C(e,t))return h(!c.f.call(e,t),e[t])}},D=function(e){if(!b(e))throw TypeError(String(e)+" is not an object");return e},P=Object.defineProperty,R={f:o?P:function(e,t,n){if(D(e),t=y(t,!0),D(n),S)try{return P(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},O=o?function(e,t,n){return R.f(e,t,h(1,n))}:function(e,t,n){return e[t]=n,e},E=function(e,t){try{O(s,e,t)}catch(i){s[e]=t}return t},x=s["__core-js_shared__"]||E("__core-js_shared__",{}),H=Function.toString;"function"!=typeof x.inspectSource&&(x.inspectSource=function(e){return H.call(e)});var I,W,j,F=x.inspectSource,V=s.WeakMap,_="function"==typeof V&&/native code/.test(F(V)),A=i((function(e){(e.exports=function(e,t){return x[e]||(x[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.9.0",mode:"global",copyright:"\xa9 2021 Denis Pushkarev (zloirock.ru)"})})),z=0,U=Math.random(),X=A("keys"),G={};if(_){var B=x.state||(x.state=new(0,s.WeakMap)),J=B.get,q=B.has,Y=B.set;I=function(e,t){return t.facade=e,Y.call(B,e,t),t},W=function(e){return J.call(B,e)||{}},j=function(e){return q.call(B,e)}}else{var Z=X.state||(X.state="Symbol("+String("state")+")_"+(++z+U).toString(36));G[Z]=!0,I=function(e,t){return t.facade=e,O(e,Z,t),t},W=function(e){return C(e,Z)?e[Z]:{}},j=function(e){return C(e,Z)}}var $={set:I,get:W,has:j,enforce:function(e){return j(e)?W(e):I(e,{})},getterFor:function(e){return function(t){var n;if(!b(t)||(n=W(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}},K=i((function(e){var t=$.get,n=$.enforce,r=String(String).split("String");(e.exports=function(e,t,a,i){var l,p=!!i&&!!i.unsafe,o=!!i&&!!i.enumerable,d=!!i&&!!i.noTargetGet;"function"==typeof a&&("string"!=typeof t||C(a,"name")||O(a,"name",t),(l=n(a)).source||(l.source=r.join("string"==typeof t?t:""))),e!==s?(p?!d&&e[t]&&(o=!0):delete e[t],o?e[t]=a:O(e,t,a)):o?e[t]=a:E(t,a)})(Function.prototype,"toString",(function(){return"function"==typeof this&&t(this).source||F(this)}))})),Q=s,ee=function(e){return"function"==typeof e?e:void 0},te=Math.ceil,ne=Math.floor,re=function(e){return isNaN(e=+e)?0:(e>0?ne:te)(e)},ae=Math.min,ie=Math.max,le=Math.min,se=function(e){return function(t,n,r){var a,i,l=N(t),s=(a=l.length)>0?ae(re(a),9007199254740991):0,p=function(e,t){var n=re(e);return n<0?ie(n+t,0):le(n,t)}(r,s);if(e&&n!=n){for(;s>p;)if((i=l[p++])!=i)return!0}else for(;s>p;p++)if((e||p in l)&&l[p]===n)return e||p||0;return!e&&-1}},pe=(se(!0),se(!1)),oe=function(e,t){var n,r=N(e),a=0,i=[];for(n in r)!C(G,n)&&C(r,n)&&i.push(n);for(;t.length>a;)C(r,n=t[a++])&&(~pe(i,n)||i.push(n));return i},de=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],me=de.concat("length","prototype"),ce={f:Object.getOwnPropertyNames||function(e){return oe(e,me)}},he={f:Object.getOwnPropertySymbols},ke=function(e,t){return arguments.length<2?ee(Q[e])||ee(s[e]):Q[e]&&Q[e][t]||s[e]&&s[e][t]}("Reflect","ownKeys")||function(e){var t=ce.f(D(e)),n=he.f;return n?t.concat(n(e)):t},ue=function(e,t){for(var n=ke(t),r=R.f,a=M.f,i=0;i<n.length;i++){var l=n[i];C(e,l)||r(e,l,a(t,l))}},fe=/#|\.prototype\./,ge=function(e,t){var n=be[Ne(e)];return n==ve||n!=ye&&("function"==typeof t?p(t):!!t)},Ne=ge.normalize=function(e){return String(e).replace(fe,".").toLowerCase()},be=ge.data={},ye=ge.NATIVE="N",ve=ge.POLYFILL="P",Ce=ge,we=M.f,Te=Object.keys||function(e){return oe(e,de)},Se=function(e){return Object(g(e))},Le=Object.assign,Me=Object.defineProperty,De=!Le||p((function(){if(o&&1!==Le({b:1},Le(Me({},"a",{enumerable:!0,get:function(){Me(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach((function(e){t[e]=e})),7!=Le({},e)[n]||Te(Le({},t)).join("")!=r}))?function(e,t){for(var n=Se(e),r=arguments.length,a=1,i=he.f,l=c.f;r>a;)for(var s,p=f(arguments[a++]),d=i?Te(p).concat(i(p)):Te(p),m=d.length,h=0;m>h;)s=d[h++],o&&!l.call(p,s)||(n[s]=p[s]);return n}:Le;!function(e,t){var n,r,a,i,l,p=e.target,o=e.global,d=e.stat;if(n=o?s:d?s[p]||E(p,{}):(s[p]||{}).prototype)for(r in t){if(i=t[r],a=e.noTargetGet?(l=we(n,r))&&l.value:n[r],!Ce(o?r:p+(d?".":"#")+r,e.forced)&&void 0!==a){if(typeof i==typeof a)continue;ue(i,a)}(e.sham||a&&a.sham)&&O(i,"sham",!0),K(n,r,i,e)}}({target:"Object",stat:!0,forced:Object.assign!==De},{assign:De});const Pe=r.createContext({}),Re=e=>{const t=r.useContext(Pe);return"function"==typeof e?e(t):Object.assign({},t,e)},Oe=({components:e,children:t,disableParentContext:n})=>{let a=Re(e);return n&&(a=e),r.createElement(Pe.Provider,{value:a},t)},Ee={inlineCode:"code",wrapper:({children:e})=>r.createElement(r.Fragment,{},e)},xe=r.forwardRef(((e,t)=>{const{components:n,mdxType:a,originalType:i,parentName:l}=e,s=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t.indexOf(n=i[r])>=0||(a[n]=e[n]);return a}(e,["components","mdxType","originalType","parentName"]),p=Re(n);return r.createElement(p[`${l}.${a}`]||p[a]||Ee[a]||i,n?Object.assign({ref:t},s,{components:n}):Object.assign({ref:t},s))}));function He(e,t){const n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){const i=n.length,l=new Array(i);l[0]=xe;const s={};for(let e in t)hasOwnProperty.call(t,e)&&(s[e]=t[e]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(let e=2;e<i;e++)l[e]=n[e];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}xe.displayName="MDXCreateElement",He.Fragment=r.Fragment},6758:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var r=n(7560),a=n(8283),i=(n(2784),n(9037)),l={id:"renderhtmlprops",title:"Interface: RenderHTMLProps<P>",sidebar_label:"RenderHTMLProps",custom_edit_url:null,hide_title:!0},s={unversionedId:"api/interfaces/renderhtmlprops",id:"api/interfaces/renderhtmlprops",isDocsHomePage:!1,title:"Interface: RenderHTMLProps<P\\>",description:"Props for the RenderHTML component.",source:"@site/docs/api/interfaces/renderhtmlprops.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/renderhtmlprops",permalink:"/react-native-render-html/docs/api/interfaces/renderhtmlprops",editUrl:null,version:"current",sidebar_label:"RenderHTMLProps",frontMatter:{id:"renderhtmlprops",title:"Interface: RenderHTMLProps<P>",sidebar_label:"RenderHTMLProps",custom_edit_url:null,hide_title:!0},sidebar:"tutorialSidebar",previous:{title:"Interface: RenderHTMLPassedProps<RendererProps\\>",permalink:"/react-native-render-html/docs/api/interfaces/renderhtmlpassedprops"},next:{title:"Interface: RenderHTMLSharedProps",permalink:"/react-native-render-html/docs/api/interfaces/renderhtmlsharedprops"}},p=[{value:"Type parameters",id:"type-parameters",children:[]},{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Properties",id:"properties",children:[{value:"GenericPressable",id:"genericpressable",children:[]},{value:"WebView",id:"webview",children:[]},{value:"allowedStyles",id:"allowedstyles",children:[]},{value:"baseStyle",id:"basestyle",children:[]},{value:"classesStyles",id:"classesstyles",children:[]},{value:"computeEmbeddedMaxWidth",id:"computeembeddedmaxwidth",children:[]},{value:"contentWidth",id:"contentwidth",children:[]},{value:"customHTMLElementModels",id:"customhtmlelementmodels",children:[]},{value:"customListStyleSpecs",id:"customliststylespecs",children:[]},{value:"dangerouslyDisableHoisting",id:"dangerouslydisablehoisting",children:[]},{value:"dangerouslyDisableWhitespaceCollapsing",id:"dangerouslydisablewhitespacecollapsing",children:[]},{value:"debug",id:"debug",children:[]},{value:"defaultTextProps",id:"defaulttextprops",children:[]},{value:"defaultViewProps",id:"defaultviewprops",children:[]},{value:"defaultWebViewProps",id:"defaultwebviewprops",children:[]},{value:"domVisitors",id:"domvisitors",children:[]},{value:"emSize",id:"emsize",children:[]},{value:"enableCSSInlineProcessing",id:"enablecssinlineprocessing",children:[]},{value:"enableExperimentalMarginCollapsing",id:"enableexperimentalmargincollapsing",children:[]},{value:"enableUserAgentStyles",id:"enableuseragentstyles",children:[]},{value:"fallbackFonts",id:"fallbackfonts",children:[]},{value:"htmlParserOptions",id:"htmlparseroptions",children:[]},{value:"idsStyles",id:"idsstyles",children:[]},{value:"ignoreDomNode",id:"ignoredomnode",children:[]},{value:"ignoredDomTags",id:"ignoreddomtags",children:[]},{value:"ignoredStyles",id:"ignoredstyles",children:[]},{value:"onDocumentMetadataLoaded",id:"ondocumentmetadataloaded",children:[]},{value:"onHTMLLoaded",id:"onhtmlloaded",children:[]},{value:"onTTreeChange",id:"onttreechange",children:[]},{value:"pressableHightlightColor",id:"pressablehightlightcolor",children:[]},{value:"remoteErrorView",id:"remoteerrorview",children:[]},{value:"remoteLoadingView",id:"remoteloadingview",children:[]},{value:"renderers",id:"renderers",children:[]},{value:"renderersProps",id:"renderersprops",children:[]},{value:"selectDomRoot",id:"selectdomroot",children:[]},{value:"setMarkersForTNode",id:"setmarkersfortnode",children:[]},{value:"source",id:"source",children:[]},{value:"systemFonts",id:"systemfonts",children:[]},{value:"tagsStyles",id:"tagsstyles",children:[]},{value:"triggerTREInvalidationPropNames",id:"triggertreinvalidationpropnames",children:[]}]}],o={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Props for the ",(0,i.kt)("inlineCode",{parentName:"p"},"RenderHTML")," component."),(0,i.kt)("h2",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"P")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/api/interfaces/rendererspropsbase"},(0,i.kt)("em",{parentName:"a"},"RenderersPropsBase"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/api/interfaces/rendererspropsbase"},(0,i.kt)("em",{parentName:"a"},"RenderersPropsBase")))))),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig"},(0,i.kt)("em",{parentName:"a"},"RenderHTMLConfig")),"<P",">")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlsourceprops"},(0,i.kt)("em",{parentName:"a"},"RenderHTMLSourceProps")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},(0,i.kt)("em",{parentName:"a"},"TransientRenderEngineConfig"))),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("strong",{parentName:"p"},"RenderHTMLProps")))),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"genericpressable"},"GenericPressable"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"GenericPressable"),": ",(0,i.kt)("em",{parentName:"p"},"ComponentType"),"<",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/genericpressableprops"},(0,i.kt)("em",{parentName:"a"},"GenericPressableProps")),">"),(0,i.kt)("p",null,"A component used to wrap pressable elements (e.g. when provided ",(0,i.kt)("inlineCode",{parentName:"p"},"onPress"),").\nNote that textual elements will not be wrapped; ",(0,i.kt)("inlineCode",{parentName:"p"},"TextProps.onPress")," will\nbe used instead."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks")),"\nChanges to this prop will cause a react tree update. Always memoize it."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," A ",(0,i.kt)("inlineCode",{parentName:"p"},"TouchableNativeFeedback")," based component on Android, ",(0,i.kt)("inlineCode",{parentName:"p"},"TouchableHighlight")," based component on other platforms."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig"},"RenderHTMLConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig#genericpressable"},"GenericPressable")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L259"},"packages/render-html/src/shared-types.ts:259")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"webview"},"WebView"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"WebView"),": ",(0,i.kt)("em",{parentName:"p"},"ComponentType"),"<any",">"),(0,i.kt)("p",null,"The WebView component used by plugins (iframe, table)...\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/native-html/plugins"},"@native-html/plugins"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,i.kt)("inlineCode",{parentName:"p"},"() => null")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig"},"RenderHTMLConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig#webview"},"WebView")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L248"},"packages/render-html/src/shared-types.ts:248")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"allowedstyles"},"allowedStyles"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"allowedStyles"),": CSSPropertyNameList"),(0,i.kt)("p",null,"Whitelist specific inline CSS style properties and ignore the others."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks"))," Property names must be camelCased: for example,\n'background-color' should be written 'backgroundColor'."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#allowedstyles"},"allowedStyles")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L395"},"packages/render-html/src/shared-types.ts:395")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"basestyle"},"baseStyle"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"baseStyle"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api#mixedstyledeclaration"},(0,i.kt)("em",{parentName:"a"},"MixedStyleDeclaration"))),(0,i.kt)("p",null,"The default style for the document (root). Inheritable styles will be\ntransferred to children. That works also for Text styles."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#basestyle"},"baseStyle")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L340"},"packages/render-html/src/shared-types.ts:340")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"classesstyles"},"classesStyles"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"classesStyles"),": ",(0,i.kt)("em",{parentName:"p"},"Readonly"),"<Record<string, ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api#mixedstyledeclaration"},(0,i.kt)("em",{parentName:"a"},"MixedStyleDeclaration")),">",">"),(0,i.kt)("p",null,"Provide your styles for specific HTML classes."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks"))," Do NOT use the StyleSheet API to create the styles\nyou're going to feed to ",(0,i.kt)("inlineCode",{parentName:"p"},"tagsStyle and classesStyles"),"."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#classesstyles"},"classesStyles")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L331"},"packages/render-html/src/shared-types.ts:331")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"computeembeddedmaxwidth"},"computeEmbeddedMaxWidth"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"computeEmbeddedMaxWidth"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"contentWidth"),": ",(0,i.kt)("em",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tagName"),": ",(0,i.kt)("em",{parentName:"p"},"string"),") => ",(0,i.kt)("em",{parentName:"p"},"number")),(0,i.kt)("p",null,"A function which takes contentWidth and tagName as arguments and returns a\nnew width. Can return Infinity to denote unconstrained widths."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"param"))," The available width in this {@link RenderHTML} component."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"param")),' The tagName of this element to render, e.g. "img".'),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Take advantage of ",(0,i.kt)("a",{parentName:"li",href:"/react-native-render-html/docs/api#usecomputemaxwidthfortag"},"useComputeMaxWidthForTag")," hook inside custom\nrenderers to get the maximum width for this tag."),(0,i.kt)("li",{parentName:"ul"},"Changes to this prop will cause a react tree update. Always\nmemoize it.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,i.kt)("inlineCode",{parentName:"p"},"(c) => c")),(0,i.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"contentWidth"),": ",(0,i.kt)("em",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tagName"),": ",(0,i.kt)("em",{parentName:"p"},"string"),"): ",(0,i.kt)("em",{parentName:"p"},"number")),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"contentWidth")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tagName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"string"))))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"number")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L200"},"packages/render-html/src/shared-types.ts:200")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig"},"RenderHTMLConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig#computeembeddedmaxwidth"},"computeEmbeddedMaxWidth")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L200"},"packages/render-html/src/shared-types.ts:200")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"contentwidth"},"contentWidth"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"contentWidth"),": ",(0,i.kt)("em",{parentName:"p"},"number")),(0,i.kt)("p",null,"The width of the HTML content to display. The recommended practice is to pass\n",(0,i.kt)("inlineCode",{parentName:"p"},"useWindowDimensions().width")," minus any padding or margins."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,i.kt)("inlineCode",{parentName:"p"},"Dimensions.get('window').width")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlsourceprops"},"RenderHTMLSourceProps"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlsourceprops#contentwidth"},"contentWidth")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L611"},"packages/render-html/src/shared-types.ts:611")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"customhtmlelementmodels"},"customHTMLElementModels"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"customHTMLElementModels"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api#htmlelementmodelrecord"},(0,i.kt)("em",{parentName:"a"},"HTMLElementModelRecord"))),(0,i.kt)("p",null,"Customize element models for target tags."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#customhtmlelementmodels"},"customHTMLElementModels")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L435"},"packages/render-html/src/shared-types.ts:435")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"customliststylespecs"},"customListStyleSpecs"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"customListStyleSpecs"),": ",(0,i.kt)("em",{parentName:"p"},"Record"),"<string, ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api#liststylespec"},(0,i.kt)("em",{parentName:"a"},"ListStyleSpec")),">"),(0,i.kt)("p",null,"Provide support for list style types which are not supported by this\nlibrary."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks"))," Check the numerous presets provided by ",(0,i.kt)("inlineCode",{parentName:"p"},"@jsamr/counter-style")," as\nthey require zero-effort!"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import hebrew from '@jsamr/counter-style/presets/hebrew';\n\nconst customListStyleSpecs = {\n  hebrew: {\n    type: 'textual',\n    counterStyleRenderer: hebrew\n  }\n};\n")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig"},"RenderHTMLConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig#customliststylespecs"},"customListStyleSpecs")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L287"},"packages/render-html/src/shared-types.ts:287")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"dangerouslydisablehoisting"},"dangerouslyDisableHoisting"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"dangerouslyDisableHoisting"),": ",(0,i.kt)("em",{parentName:"p"},"boolean")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Experimental")),(0,i.kt)("p",null,"Disable hoisting. Especially useful for rendering with react-native-web.\nNote that your layout might break in native!"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," false"),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#dangerouslydisablehoisting"},"dangerouslyDisableHoisting")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L462"},"packages/render-html/src/shared-types.ts:462")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"dangerouslydisablewhitespacecollapsing"},"dangerouslyDisableWhitespaceCollapsing"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"dangerouslyDisableWhitespaceCollapsing"),": ",(0,i.kt)("em",{parentName:"p"},"boolean")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Experimental")),(0,i.kt)("p",null,"Disable whitespace collapsing. Especially useful if your html is\nbeing pre-processed server-side with a minifier."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," false"),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#dangerouslydisablewhitespacecollapsing"},"dangerouslyDisableWhitespaceCollapsing")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L471"},"packages/render-html/src/shared-types.ts:471")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"debug"},"debug"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"debug"),": ",(0,i.kt)("em",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Log to the console meaningful information regarding dismissed CSS\nproperties, ignored tags... etc."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,i.kt)("inlineCode",{parentName:"p"},"__DEV__")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig"},"RenderHTMLConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig#debug"},"debug")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L241"},"packages/render-html/src/shared-types.ts:241")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"defaulttextprops"},"defaultTextProps"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"defaultTextProps"),": TextProps"),(0,i.kt)("p",null,"Default props for Text elements in the render tree."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'"style" will be merged into the tnode own styles.'),(0,i.kt)("li",{parentName:"ul"},"Changes to this prop will cause a react tree update. Always memoize it.")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig"},"RenderHTMLConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig#defaulttextprops"},"defaultTextProps")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L219"},"packages/render-html/src/shared-types.ts:219")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"defaultviewprops"},"defaultViewProps"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"defaultViewProps"),": ViewProps"),(0,i.kt)("p",null,"Default props for View elements in the render tree."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'"style" will be merged into the tnode own styles.'),(0,i.kt)("li",{parentName:"ul"},"Changes to this prop will cause a react tree update. Always memoize it.")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig"},"RenderHTMLConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig#defaultviewprops"},"defaultViewProps")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L227"},"packages/render-html/src/shared-types.ts:227")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"defaultwebviewprops"},"defaultWebViewProps"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"defaultWebViewProps"),": ",(0,i.kt)("em",{parentName:"p"},"any")),(0,i.kt)("p",null,"Default props for WebView elements in the render tree used by plugins."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks")),"\nChanges to this prop will cause a react tree update. Always memoize it."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig"},"RenderHTMLConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig#defaultwebviewprops"},"defaultWebViewProps")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L234"},"packages/render-html/src/shared-types.ts:234")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"domvisitors"},"domVisitors"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"domVisitors"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/domvisitorcallbacks"},(0,i.kt)("em",{parentName:"a"},"DomVisitorCallbacks"))),(0,i.kt)("p",null,"An object which callbacks will be invoked when a DOM element or text node\nhas been parsed and its children attached. This is great to tamper the dom,\nremove children, insert nodes, change text nodes data... etc."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remark"))," Each callback is applied during DOM parsing, thus with very little\noverhead. However, it means that one node next siblings won't be available\nsince it has not yet been parsed. If you need some siblings logic, apply\nthis logic to the children of this node."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#domvisitors"},"domVisitors")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L371"},"packages/render-html/src/shared-types.ts:371")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"emsize"},"emSize"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"emSize"),": ",(0,i.kt)("em",{parentName:"p"},"number")),(0,i.kt)("p",null,"The default value in pixels for 1em"),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#emsize"},"emSize")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L439"},"packages/render-html/src/shared-types.ts:439")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"enablecssinlineprocessing"},"enableCSSInlineProcessing"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"enableCSSInlineProcessing"),": ",(0,i.kt)("em",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Enable or disable inline CSS processing of inline styles."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks"))," If you want to allow or disallow specific properties, use\n",(0,i.kt)("inlineCode",{parentName:"p"},"allowedStyles")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"ignoredStyles")," props."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," true"),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#enablecssinlineprocessing"},"enableCSSInlineProcessing")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L317"},"packages/render-html/src/shared-types.ts:317")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"enableexperimentalmargincollapsing"},"enableExperimentalMarginCollapsing"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"enableExperimentalMarginCollapsing"),": ",(0,i.kt)("em",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Enable or disable margin collapsing CSS behavior (experimental!).\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing"},"MDN docs"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks"))," Limitations:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Only adjacent siblings collapsing is implemented."),(0,i.kt)("li",{parentName:"ul"},"If one of the margins height is in percent, no collapsing will occur.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," false"),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig"},"RenderHTMLConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig#enableexperimentalmargincollapsing"},"enableExperimentalMarginCollapsing")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L211"},"packages/render-html/src/shared-types.ts:211")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"enableuseragentstyles"},"enableUserAgentStyles"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"enableUserAgentStyles"),": ",(0,i.kt)("em",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Enable or disable fallback styles for each tag. For example, ",(0,i.kt)("inlineCode",{parentName:"p"},"pre")," tags\nwill have ",(0,i.kt)("inlineCode",{parentName:"p"},"whiteSpace")," set to 'pre' by default."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," true"),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#enableuseragentstyles"},"enableUserAgentStyles")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L308"},"packages/render-html/src/shared-types.ts:308")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fallbackfonts"},"fallbackFonts"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"fallbackFonts"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/fallbackfontsdefinitions"},(0,i.kt)("em",{parentName:"a"},"FallbackFontsDefinitions"))),(0,i.kt)("p",null,"A record for specific CSS fonts."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Suggestion"),": Use Plaform.select({ ios: ..., android: ..., default: ...})"),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#fallbackfonts"},"fallbackFonts")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L431"},"packages/render-html/src/shared-types.ts:431")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"htmlparseroptions"},"htmlParserOptions"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"htmlParserOptions"),": ParserOptions"),(0,i.kt)("p",null,"ParserOptions for ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/fb55/htmlparser2/wiki/Parser-options"},"htmlparser2")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,i.kt)("inlineCode",{parentName:"p"},"{ decodeEntities: true }")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#htmlparseroptions"},"htmlParserOptions")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L301"},"packages/render-html/src/shared-types.ts:301")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"idsstyles"},"idsStyles"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"idsStyles"),": ",(0,i.kt)("em",{parentName:"p"},"Readonly"),"<Record<string, ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api#mixedstyledeclaration"},(0,i.kt)("em",{parentName:"a"},"MixedStyleDeclaration")),">",">"),(0,i.kt)("p",null,"Provide your styles for specific element identifiers (id attribute)."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#idsstyles"},"idsStyles")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L335"},"packages/render-html/src/shared-types.ts:335")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ignoredomnode"},"ignoreDomNode"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"ignoreDomNode"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"node"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/classes/domnode"},(0,i.kt)("em",{parentName:"a"},"DOMNode")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"parent"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/classes/domnodewithchildren"},(0,i.kt)("em",{parentName:"a"},"DOMNodeWithChildren")),") => ",(0,i.kt)("em",{parentName:"p"},"unknown")),(0,i.kt)("p",null,"Ignore specific DOM nodes."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Warning"),": when this function is invoked, the node has not yet been\nattached to its parent or siblings. Use the second argument (",(0,i.kt)("inlineCode",{parentName:"p"},"parent"),")\nif you need to perform logic based on parent."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Use ",(0,i.kt)("inlineCode",{parentName:"li"},"ignoredDomTags")," if you just need to target specific tag names."),(0,i.kt)("li",{parentName:"ul"},"The function is applied during DOM parsing, thus with very little\noverhead. However, it means that one node next siblings won't be\navailable since it has not yet been parsed.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"returns"))," ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if this node should not be included in the DOM, anything\nelse otherwise."),(0,i.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"node"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/classes/domnode"},(0,i.kt)("em",{parentName:"a"},"DOMNode")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"parent"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/classes/domnodewithchildren"},(0,i.kt)("em",{parentName:"a"},"DOMNodeWithChildren")),"): ",(0,i.kt)("em",{parentName:"p"},"unknown")),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/api/classes/domnode"},(0,i.kt)("em",{parentName:"a"},"DOMNode")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"parent")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/api/classes/domnodewithchildren"},(0,i.kt)("em",{parentName:"a"},"DOMNodeWithChildren")))))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"unknown")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L357"},"packages/render-html/src/shared-types.ts:357")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#ignoredomnode"},"ignoreDomNode")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L357"},"packages/render-html/src/shared-types.ts:357")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ignoreddomtags"},"ignoredDomTags"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"ignoredDomTags"),": ",(0,i.kt)("em",{parentName:"p"},"string"),"[]"),(0,i.kt)("p",null,"A list of tags which should not be included in the DOM."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remark"))," The filtering is happening during parsing, thus with very little\noverhead."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#ignoreddomtags"},"ignoredDomTags")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L378"},"packages/render-html/src/shared-types.ts:378")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ignoredstyles"},"ignoredStyles"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"ignoredStyles"),": CSSPropertyNameList"),(0,i.kt)("p",null,"Blacklist specific inline CSS style properties and allow the others."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks"))," Property names must be camelCased: for example,\n'background-color' should be written 'backgroundColor'. Also note that if\nyou don't want inline style processing at all, you should set\n",(0,i.kt)("inlineCode",{parentName:"p"},"enableCSSInlineProcessing")," prop to ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#ignoredstyles"},"ignoredStyles")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L404"},"packages/render-html/src/shared-types.ts:404")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ondocumentmetadataloaded"},"onDocumentMetadataLoaded"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"onDocumentMetadataLoaded"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"documentMetadata"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/documentmetadata"},(0,i.kt)("em",{parentName:"a"},"DocumentMetadata")),") => ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("p",null,"Handler invoked when the document metadata is available. It will\nre-trigger on HTML content changes."),(0,i.kt)("h4",{id:"type-declaration-2"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"documentMetadata"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/documentmetadata"},(0,i.kt)("em",{parentName:"a"},"DocumentMetadata")),"): ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"documentMetadata")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/api/interfaces/documentmetadata"},(0,i.kt)("em",{parentName:"a"},"DocumentMetadata")))))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L624"},"packages/render-html/src/shared-types.ts:624")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlsourceprops"},"RenderHTMLSourceProps"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlsourceprops#ondocumentmetadataloaded"},"onDocumentMetadataLoaded")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L624"},"packages/render-html/src/shared-types.ts:624")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"onhtmlloaded"},"onHTMLLoaded"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"onHTMLLoaded"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"html"),": ",(0,i.kt)("em",{parentName:"p"},"string"),") => ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("p",null,"Triggered when HTML is available to the RenderHTML component."),(0,i.kt)("h4",{id:"type-declaration-3"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"html"),": ",(0,i.kt)("em",{parentName:"p"},"string"),"): ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"html")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"string"))))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L619"},"packages/render-html/src/shared-types.ts:619")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlsourceprops"},"RenderHTMLSourceProps"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlsourceprops#onhtmlloaded"},"onHTMLLoaded")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L619"},"packages/render-html/src/shared-types.ts:619")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"onttreechange"},"onTTreeChange"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"onTTreeChange"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"ttree"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/tdocument"},(0,i.kt)("em",{parentName:"a"},"TDocument")),") => ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("p",null,"Triggered when the transient render tree changes. Useful for debugging."),(0,i.kt)("h4",{id:"type-declaration-4"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"ttree"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/tdocument"},(0,i.kt)("em",{parentName:"a"},"TDocument")),"): ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ttree")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/api/interfaces/tdocument"},(0,i.kt)("em",{parentName:"a"},"TDocument")))))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L615"},"packages/render-html/src/shared-types.ts:615")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlsourceprops"},"RenderHTMLSourceProps"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlsourceprops#onttreechange"},"onTTreeChange")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L615"},"packages/render-html/src/shared-types.ts:615")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"pressablehightlightcolor"},"pressableHightlightColor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"pressableHightlightColor"),": ",(0,i.kt)("em",{parentName:"p"},"string")),(0,i.kt)("p",null,"Color used for pressable items, either for the ripple effect (Android), or\nhighlight (other platforms)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," rgba(38, 132, 240, 0.2)"),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig"},"RenderHTMLConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig#pressablehightlightcolor"},"pressableHightlightColor")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L266"},"packages/render-html/src/shared-types.ts:266")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"remoteerrorview"},"remoteErrorView"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"remoteErrorView"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"source"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/htmlsourceuri"},(0,i.kt)("em",{parentName:"a"},"HTMLSourceUri")),") => ",(0,i.kt)("em",{parentName:"p"},"ReactElement"),"<any, string ","|"," JSXElementConstructor<any",">",">"),(0,i.kt)("p",null,"Replace the default error if a remote website's content could not be fetched."),(0,i.kt)("h4",{id:"type-declaration-5"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"source"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/htmlsourceuri"},(0,i.kt)("em",{parentName:"a"},"HTMLSourceUri")),"): ",(0,i.kt)("em",{parentName:"p"},"ReactElement"),"<any, string ","|"," JSXElementConstructor<any",">",">"),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"source")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/api/interfaces/htmlsourceuri"},(0,i.kt)("em",{parentName:"a"},"HTMLSourceUri")))))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"ReactElement"),"<any, string ","|"," JSXElementConstructor<any",">",">"),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L592"},"packages/render-html/src/shared-types.ts:592")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig"},"RenderHTMLConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig#remoteerrorview"},"remoteErrorView")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L592"},"packages/render-html/src/shared-types.ts:592")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"remoteloadingview"},"remoteLoadingView"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"remoteLoadingView"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"source"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/htmlsourceuri"},(0,i.kt)("em",{parentName:"a"},"HTMLSourceUri")),") => ",(0,i.kt)("em",{parentName:"p"},"ReactElement"),"<any, string ","|"," JSXElementConstructor<any",">",">"),(0,i.kt)("p",null,"Replace the default loader while fetching a remote website's content."),(0,i.kt)("h4",{id:"type-declaration-6"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"source"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/htmlsourceuri"},(0,i.kt)("em",{parentName:"a"},"HTMLSourceUri")),"): ",(0,i.kt)("em",{parentName:"p"},"ReactElement"),"<any, string ","|"," JSXElementConstructor<any",">",">"),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"source")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/api/interfaces/htmlsourceuri"},(0,i.kt)("em",{parentName:"a"},"HTMLSourceUri")))))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"ReactElement"),"<any, string ","|"," JSXElementConstructor<any",">",">"),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L588"},"packages/render-html/src/shared-types.ts:588")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig"},"RenderHTMLConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig#remoteloadingview"},"remoteLoadingView")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L588"},"packages/render-html/src/shared-types.ts:588")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"renderers"},"renderers"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"renderers"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api#customtagrendererrecord"},(0,i.kt)("em",{parentName:"a"},"CustomTagRendererRecord"))),(0,i.kt)("p",null,"Your custom renderers."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig"},"RenderHTMLConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig#renderers"},"renderers")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L584"},"packages/render-html/src/shared-types.ts:584")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"renderersprops"},"renderersProps"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"renderersProps"),": ",(0,i.kt)("em",{parentName:"p"},"Partial"),"<P",">"),(0,i.kt)("p",null,"Props to use in custom renderers with ",(0,i.kt)("inlineCode",{parentName:"p"},"useRendererProps"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"When you use the hook, you'll get this object deep-merged with default renderers props."),(0,i.kt)("li",{parentName:"ul"},"Changes to this prop will cause a react tree update. Always memoize it.")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig"},"RenderHTMLConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlconfig#renderersprops"},"renderersProps")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L175"},"packages/render-html/src/shared-types.ts:175")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"selectdomroot"},"selectDomRoot"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"selectDomRoot"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"node"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/classes/domnodewithchildren"},(0,i.kt)("em",{parentName:"a"},"DOMNodeWithChildren")),") => ",(0,i.kt)("em",{parentName:"p"},"any")),(0,i.kt)("p",null,"Select the DOM root before TTree generation. For example, you could\niterate over children until you reach an article element and return this\nelement."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks"))," Applied after DOM parsing, before normalization and TTree\nconstruction. Before normalization implies that a body will be added in\nthe tree ",(0,i.kt)("strong",{parentName:"p"},"after")," selecting root."),(0,i.kt)("h4",{id:"type-declaration-7"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"node"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/classes/domnodewithchildren"},(0,i.kt)("em",{parentName:"a"},"DOMNodeWithChildren")),"): ",(0,i.kt)("em",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"node")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/react-native-render-html/docs/api/classes/domnodewithchildren"},(0,i.kt)("em",{parentName:"a"},"DOMNodeWithChildren")))))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"any")),(0,i.kt)("p",null,"Defined in: node_modules/@native-html/transient-render-engine/lib/typescript/TRenderEngine.d.ts:73"),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#selectdomroot"},"selectDomRoot")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L388"},"packages/render-html/src/shared-types.ts:388")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setmarkersfortnode"},"setMarkersForTNode"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"setMarkersForTNode"),": SetMarkersForTNode"),(0,i.kt)("p",null,"Set custom markers from a TNode and all its descendants. Markers will be\naccessible in custom renderers via ",(0,i.kt)("inlineCode",{parentName:"p"},"tnode.markers")," prop."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"param"))," The markers to modify."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"param"))," Markers from the parent TNode."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"param"))," The TNode to inspect"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks")),"\nChanges to this prop will cause a react tree update. Always memoize it."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"defaultvalue"))," ",(0,i.kt)("inlineCode",{parentName:"p"},"() => null")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#setmarkersfortnode"},"setMarkersForTNode")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L453"},"packages/render-html/src/shared-types.ts:453")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"source"},"source"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"source"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api#htmlsource"},(0,i.kt)("em",{parentName:"a"},"HTMLSource"))),(0,i.kt)("p",null,"The object source to render (either ",(0,i.kt)("inlineCode",{parentName:"p"},"{ uri }"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"{ html }")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"{ dom }"),")."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlsourceprops"},"RenderHTMLSourceProps"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/renderhtmlsourceprops#source"},"source")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L604"},"packages/render-html/src/shared-types.ts:604")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"systemfonts"},"systemFonts"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"systemFonts"),": ",(0,i.kt)("em",{parentName:"p"},"string"),"[]"),(0,i.kt)("p",null,"A list of fonts available in the current platform. These fonts will be used\nto select the first match in CSS ",(0,i.kt)("inlineCode",{parentName:"p"},"fontFamily")," property, which supports a\ncomma-separated list of fonts. By default, a handful of fonts are selected\nper platform."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"You need to specify any font family you wish to use via ",(0,i.kt)("inlineCode",{parentName:"li"},"*styles")," props\nhere, otherwise those styles will be ignored."),(0,i.kt)("li",{parentName:"ul"},"If you are using expo, you should use or extend ",(0,i.kt)("inlineCode",{parentName:"li"},"Constants.systemFonts"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import RenderHTML, {defaultSystemFonts} from 'react-native-render-html'\n// Replace defaultSystemFonts with Constants.systemFonts if you're using expo\nconst systemFonts = [...defaultSystemFonts, 'Mysuperfont']\n// ...\n<RenderHTML systemFonts={systemFonts} ... />\n")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#systemfonts"},"systemFonts")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L425"},"packages/render-html/src/shared-types.ts:425")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tagsstyles"},"tagsStyles"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"tagsStyles"),": ",(0,i.kt)("em",{parentName:"p"},"Readonly"),"<Record<string, ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api#mixedstyledeclaration"},(0,i.kt)("em",{parentName:"a"},"MixedStyleDeclaration")),">",">"),(0,i.kt)("p",null,"Provide your styles for specific HTML tags."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks"))," Do NOT use the StyleSheet API to create the styles\nyou're going to feed to ",(0,i.kt)("inlineCode",{parentName:"p"},"tagsStyle and classesStyles"),"."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#tagsstyles"},"tagsStyles")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L324"},"packages/render-html/src/shared-types.ts:324")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"triggertreinvalidationpropnames"},"triggerTREInvalidationPropNames"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"triggerTREInvalidationPropNames"),": (",(0,i.kt)("inlineCode",{parentName:"p"},'"htmlParserOptions"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"enableUserAgentStyles"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"enableCSSInlineProcessing"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"tagsStyles"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"classesStyles"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"idsStyles"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"baseStyle"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"ignoreDomNode"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"domVisitors"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"ignoredDomTags"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"selectDomRoot"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"allowedStyles"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"ignoredStyles"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"systemFonts"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"fallbackFonts"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"customHTMLElementModels"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"emSize"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"setMarkersForTNode"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"dangerouslyDisableHoisting"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"dangerouslyDisableWhitespaceCollapsing"'),")[]"),(0,i.kt)("p",null,"Name of props which should trigger a rebuild of the Transient Render\nEngine (TRE)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks"))," For performance sake, this component will not recreate an\ninstance of the engine on each prop change. If you need some props to\ntrigger a new instantiation, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"tagsStyles"),", pass a list of their\nnames in this array."),(0,i.kt)("p",null,"Please note that only props involved in the building of the transient render\ntree are concerned by this mechanism."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"triggerTREInvalidationPropNames = ['tagsStyles', 'allowedStyles']\n")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig"},"TransientRenderEngineConfig"),".",(0,i.kt)("a",{parentName:"p",href:"/react-native-render-html/docs/api/interfaces/transientrenderengineconfig#triggertreinvalidationpropnames"},"triggerTREInvalidationPropNames")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/archriss/react-native-render-html/blob/a1a993d/packages/render-html/src/shared-types.ts#L489"},"packages/render-html/src/shared-types.ts:489")))}d.isMDXComponent=!0}}]);