(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3133],{8690:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var a=n(2784),i=n(6785),r=n(77);function o(e){var t=e.name,n=e.member,o=e.full,s=void 0!==o&&o,l=n?"#"+n.toLowerCase():"";return a.createElement(i.Z,{url:(0,r.Z)("/api/"+t.toLowerCase()+l),name:n&&t&&s?t+"."+n:n||t,full:s,type:"api-def"})}},8063:function(e,t,n){"use strict";n.d(t,{Z:function(){return v}});var a=n(2784),i=n(77),r=n(6277),o="socialLinks_E4G_",s="reddit_1q6d",l="twitter_1SsQ",d="icon_3OGl",p="row_13Ce",m="text_3HtS",c="ic_Men_";function h(){return a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 72 72",className:c},a.createElement("path",{fill:"none",d:"M0 0h72v72H0z"}),a.createElement("path",{fill:"var(--button-color)",d:"M68.812 15.14c-2.348 1.04-4.87 1.744-7.52 2.06 2.704-1.62 4.78-4.186 5.757-7.243-2.53 1.5-5.33 2.592-8.314 3.176C56.35 10.59 52.948 9 49.182 9c-7.23 0-13.092 5.86-13.092 13.093 0 1.026.118 2.02.338 2.98C25.543 24.527 15.9 19.318 9.44 11.396c-1.125 1.936-1.77 4.184-1.77 6.58 0 4.543 2.312 8.552 5.824 10.9-2.146-.07-4.165-.658-5.93-1.64-.002.056-.002.11-.002.163 0 6.345 4.513 11.638 10.504 12.84-1.1.298-2.256.457-3.45.457-.845 0-1.666-.078-2.464-.23 1.667 5.2 6.5 8.985 12.23 9.09-4.482 3.51-10.13 5.605-16.26 5.605-1.055 0-2.096-.06-3.122-.184 5.794 3.717 12.676 5.882 20.067 5.882 24.083 0 37.25-19.95 37.25-37.25 0-.565-.013-1.133-.038-1.693 2.558-1.847 4.778-4.15 6.532-6.774z"}))}function u(){return a.createElement("svg",{className:c,xmlns:"http://www.w3.org/2000/svg",fill:"var(--button-color)",viewBox:"0 0 24 24"},a.createElement("path",{d:"M14.238 15.348c.085.084.085.221 0 .306-.465.462-1.194.687-2.231.687l-.008-.002-.008.002c-1.036 0-1.766-.225-2.231-.688-.085-.084-.085-.221 0-.305.084-.084.222-.084.307 0 .379.377 1.008.561 1.924.561l.008.002.008-.002c.915 0 1.544-.184 1.924-.561.085-.084.223-.084.307 0zm-3.44-2.418c0-.507-.414-.919-.922-.919-.509 0-.923.412-.923.919 0 .506.414.918.923.918.508.001.922-.411.922-.918zm13.202-.93c0 6.627-5.373 12-12 12s-12-5.373-12-12 5.373-12 12-12 12 5.373 12 12zm-5-.129c0-.851-.695-1.543-1.55-1.543-.417 0-.795.167-1.074.435-1.056-.695-2.485-1.137-4.066-1.194l.865-2.724 2.343.549-.003.034c0 .696.569 1.262 1.268 1.262.699 0 1.267-.566 1.267-1.262s-.568-1.262-1.267-1.262c-.537 0-.994.335-1.179.804l-2.525-.592c-.11-.027-.223.037-.257.145l-.965 3.038c-1.656.02-3.155.466-4.258 1.181-.277-.255-.644-.415-1.05-.415-.854.001-1.549.693-1.549 1.544 0 .566.311 1.056.768 1.325-.03.164-.05.331-.05.5 0 2.281 2.805 4.137 6.253 4.137s6.253-1.856 6.253-4.137c0-.16-.017-.317-.044-.472.486-.261.82-.766.82-1.353zm-4.872.141c-.509 0-.922.412-.922.919 0 .506.414.918.922.918s.922-.412.922-.918c0-.507-.413-.919-.922-.919z"}))}function v(e){var t=e.redditUrl,n=e.twitterUrl;return a.createElement("div",{className:o},a.createElement("div",{className:p},a.createElement("img",{className:d,src:(0,i.Z)("/img/undraw_online_discussion.svg")}),a.createElement("div",{className:m},"Give us feedback in those threads")),a.createElement("div",{className:(0,r.Z)(p,"margin-top--md")},a.createElement("a",{className:(0,r.Z)(l,"button","button--outline","margin-right--md"),href:n},"Twitter",a.createElement(h,null)),a.createElement("a",{className:(0,r.Z)(s,"button","button--outline"),href:t},"Reddit",a.createElement(u,null))))}},5785:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return m},metadata:function(){return c},toc:function(){return h},default:function(){return v}});var a=n(7560),i=n(8283),r=(n(2784),n(9037)),o=n(8690),s=n(6785),l=n(8063),d=["components"],p={title:"What's New in v6.2?",author:"Jules Sam. Randolph",author_title:"Developer of React Native Render HTML v6",author_url:"https://github.com/jsamr/",author_image_url:"https://avatars.githubusercontent.com/u/3646758?v=4",tags:["foundry","release notes"],description:"A version focused on accessibility and enhanced model rendering.",image:"img/article-6.2-release-notes.png",hide_table_of_contents:!1,draft:!1},m=void 0,c={permalink:"/react-native-render-html/blog/2021/10/23/6-2-updates",source:"@site/blog/2021-10-23-6-2-updates.mdx",title:"What's New in v6.2?",description:"A version focused on accessibility and enhanced model rendering.",date:"2021-10-23T00:00:00.000Z",formattedDate:"October 23, 2021",tags:[{label:"foundry",permalink:"/react-native-render-html/blog/tags/foundry"},{label:"release notes",permalink:"/react-native-render-html/blog/tags/release-notes"}],readingTime:10.25,truncated:!0,nextItem:{title:"Create A WebView-free Blog App with React Native Render HTML, Part III",permalink:"/react-native-render-html/blog/2021/06/29/create-blog-app-rnrh-III"}},h=[{value:"You Might not Need a Custom Component Renderer",id:"you-might-not-need-a-custom-component-renderer",children:[{value:"<code>getMixedUAStyles</code>",id:"getmixeduastyles",children:[]},{value:"<code>reactNativeProps</code>",id:"reactnativeprops",children:[]},{value:"<code>getReactNativeProps</code>",id:"getreactnativeprops",children:[]}]},{value:"A Focus on Accessibility",id:"a-focus-on-accessibility",children:[{value:"Support for <code>aria-label</code> and <code>role</code> Attributes",id:"support-for-aria-label-and-role-attributes",children:[]},{value:"Accessible <code>&lt;a&gt;</code> Tags",id:"accessible-a-tags",children:[]},{value:"Enhanced Accessibility for <code>&lt;img&gt;</code> Tags",id:"enhanced-accessibility-for-img-tags",children:[]},{value:"Accessible <code>&lt;h1-6&gt;</code> Tags",id:"accessible-h1-6-tags",children:[]}]},{value:"Other Enhancements",id:"other-enhancements",children:[{value:"Support for <code>user-select</code> CSS property",id:"support-for-user-select-css-property",children:[]}]},{value:"Bonus: Version 6.1 Features",id:"bonus-version-61-features",children:[{value:"<code>enableExperimentalBRCollapsing</code> Prop",id:"enableexperimentalbrcollapsing-prop",children:[]},{value:"<code>enableExperimentalGhostLinesPrevention</code> Prop",id:"enableexperimentalghostlinesprevention-prop",children:[]},{value:"<code>provideEmbeddedHeaders</code> Prop",id:"provideembeddedheaders-prop",children:[]},{value:"<code>bypassAnonymousTPhrasingNodes</code> Prop",id:"bypassanonymoustphrasingnodes-prop",children:[]}]},{value:"Learn More",id:"learn-more",children:[]}],u={toc:h};function v(e){var t=e.components,n=(0,i.Z)(e,d);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"It has been over three months since the first final version of the Foundry\nrelease has been made public. Today, I am glad to announce the release of the 6.2 version! This new version focuses on two areas of\nimprovements:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Computer_accessibility"},"Accessibility"),", and more specifically integration with ",(0,r.kt)("em",{parentName:"li"},"VoiceOver")," and ",(0,r.kt)("em",{parentName:"li"},"TalkBack")," screen readers;"),(0,r.kt)("li",{parentName:"ol"},"Richer ",(0,r.kt)("a",{parentName:"li",href:"/docs/guides/custom-renderers#model-based-custom-rendering"},"model-based\nrendering"),", and the\nfeature to define React Native props from those models.")),(0,r.kt)("p",null,"As you will discover through this reading, both are somehow related. Let's find out how!"),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"bonus")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"This post also covers a due overview of features introduced in the previous 6.1 minor release."))),(0,r.kt)("h2",{id:"you-might-not-need-a-custom-component-renderer"},"You Might not Need a Custom Component Renderer"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/guides/custom-renderers#model-based-custom-rendering"},"Model-based rendering")," via ",(0,r.kt)(o.Z,{name:"RenderHTMLProps",member:"customHTMLElementModels",mdxType:"APIReference"})," prop has been a lightweight alternative to\ncustom (component) renderers since the early stages of the Foundry release.\nHowever, it was limited to setting user agent styles (",(0,r.kt)(o.Z,{name:"HTMLElementModel",member:"mixedUAStyles",mdxType:"APIReference"}),"),\nalthough those styles could be derived from the DOM node element attributes\n(the now-deprecated ",(0,r.kt)(o.Z,{name:"HTMLElementModel",member:"getUADerivedStyleFromAttributes",mdxType:"APIReference"}),").\nThe below example is a reminder on how those element models can be defined, for instance to\nregister a new ",(0,r.kt)("inlineCode",{parentName:"p"},"<blue-circle>")," tag which renders to a 50 by 50 blue circle!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="An Example of Model-Based Rendering"',title:'"An',Example:!0,of:!0,"Model-Based":!0,'Rendering"':!0},"import RenderHTML, {\n  HTMLElementModel,\n  HTMLContentModel\n} from 'react-native-render-html';\n\n// The eponym prop to pass to RenderHTML\nconst customHTMLElementModels = {\n  'blue-circle': HTMLElementModel.fromCustomModel({\n    tagName: 'blue-circle',\n    mixedUAStyles: {\n      width: 50,\n      height: 50,\n      borderRadius: 25,\n      alignSelf: 'center',\n      backgroundColor: 'blue'\n    },\n    contentModel: HTMLContentModel.block\n  })\n};\n")),(0,r.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Keep in mind that ",(0,r.kt)(o.Z,{name:"HTMLElementModel",member:"mixedUAStyles",mdxType:"APIReference"})," has a lower specificity than styles passed to ",(0,r.kt)("inlineCode",{parentName:"p"},"RenderHTML")," such as\n","\u200b",(0,r.kt)(o.Z,{name:"RenderHTMLProps",member:"tagsStyles",mdxType:"APIReference"}),".\nSee the ",(0,r.kt)("a",{parentName:"p",href:"/docs/flow/css-processing#specificity"},"CSS Processing guide")," section\nrelated to specificity for a refresher."))),(0,r.kt)("p",null,"Version 6.2 ships with a bunch of new fields for HTML element models which\nshould increase model-based rendering adoption. Let's take a tour!"),(0,r.kt)("h3",{id:"getmixeduastyles"},(0,r.kt)("inlineCode",{parentName:"h3"},"getMixedUAStyles")),(0,r.kt)("p",null,"This field deprecates ",(0,r.kt)(o.Z,{name:"HTMLElementModel",member:"getUADerivedStyleFromAttributes",mdxType:"APIReference"}),"; it serves the same purpose but its\nsignature has changed. It now receives the target ",(0,r.kt)("inlineCode",{parentName:"p"},"tnode")," and DOM ",(0,r.kt)("inlineCode",{parentName:"p"},"element"),",\nwhich lets us implement more fine-grained logic such as CSS-selector-like\nbehaviors:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=\"Conditionnaly remove margins of 'ol' direct descendents of 'p' elements.\"",title:'"Conditionnaly',remove:!0,margins:!0,of:!0,"'ol'":!0,direct:!0,descendents:!0,"'p'":!0,'elements."':!0},"import RenderHTML, {\n  defaultHTMLElementModels,\n  isDomElement\n} from 'react-native-render-html';\n\n// The eponym prop to pass to RenderHTML\nconst customHTMLElementModels = {\n  ol: defaultHTMLElementModels.ol.extend({\n    getMixedUAStyles(tnode, element) {\n      if (isDomElement(element.parent) && element.parent.tagName === 'p') {\n        // This is equivalent to targetting a \"p > ol\" CSS selector.\n        return {\n          marginTop: 0,\n          marginBottom: 0\n        };\n      }\n    }\n  })\n};\n")),(0,r.kt)("p",null,'However and as stated before, those styles will have a lower specificity than tags, classes and\nID styles and as such, these are not "real" CSS selectors. Hopefully, CSS selectors will be\nimplemented at some point, ',(0,r.kt)("a",{parentName:"p",href:"https://native-html.canny.io/features/p/support-complex-css-like-selectors-eg-div-button"},"you can upvote the feature request here"),"!\nThe hard challenge is that these should not impede performances. I am planning to explore this issue next year."),(0,r.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Beware that this ",(0,r.kt)("inlineCode",{parentName:"p"},"tnode")," is an instance of ",(0,r.kt)(o.Z,{name:"TNodeDescriptor",mdxType:"APIReference"}),", which is a minimal ",(0,r.kt)("inlineCode",{parentName:"p"},"tnode")," shape available during the Transient Render\nEngine creation. You will not have access to ",(0,r.kt)("inlineCode",{parentName:"p"},"parent")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"children")," fields,\nsince the hierarchy is yet in the making. This is why we are using the second\nargument, ",(0,r.kt)("inlineCode",{parentName:"p"},"element"),", to query the DOM hierarchy instead. For this very reason,\nyou are advised to use ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/fb55/domutils"},(0,r.kt)("inlineCode",{parentName:"a"},"domutils"))," library\nto query the DOM and create your conditional styling rules."))),(0,r.kt)("h3",{id:"reactnativeprops"},(0,r.kt)("inlineCode",{parentName:"h3"},"reactNativeProps")),(0,r.kt)("p",null,"This field holds props that will be passed to the native component during the\nrendering phase. It is an object with three optional properties (for reference,\nthe shape of this object is a ",(0,r.kt)(o.Z,{name:"ReactNativePropsDefinitions",mdxType:"APIReference"}),"):"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"text"),", to pass native props to ",(0,r.kt)("inlineCode",{parentName:"li"},"Text"),"-backed renderers;"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"view"),", to pass native props to ",(0,r.kt)("inlineCode",{parentName:"li"},"View"),"-backed renderers;"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"native"),", to pass props to either ",(0,r.kt)("inlineCode",{parentName:"li"},"View")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"Text"),"-backed renderers.")),(0,r.kt)("p",null,"In the next snippet, we are defining a custom tag, ",(0,r.kt)("inlineCode",{parentName:"p"},"<nav-widget>"),", and setting\naccessibility props to any underlying native component for the render phase. We\ncan also define ",(0,r.kt)("inlineCode",{parentName:"p"},"onPress"),", which will cause the renderer to use the\n","\u200b",(0,r.kt)(o.Z,{name:"RenderHTMLProps",member:"GenericPressable",mdxType:"APIReference"})," instead of\ndefault ",(0,r.kt)("inlineCode",{parentName:"p"},"View")," for block renderers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Defining React Native props in an HTML element model"',title:'"Defining',React:!0,Native:!0,props:!0,in:!0,an:!0,HTML:!0,element:!0,'model"':!0},"import RenderHTML, {\n  HTMLContentModel,\n  HTMLElementModel\n} from 'react-native-render-html';\n\n// The eponym prop to pass to RenderHTML\nconst customHTMLElementModels = {\n  'nav-widget': HTMLElementModel.fromCustomModel({\n    tagName: 'nav-widget',\n    contentModel: HTMLContentModel.block,\n    reactNativeProps: {\n      native: {\n        accessibilityRole: 'link',\n        onPress() {\n          console.info('Pressed the nav widget!');\n        }\n      }\n    }\n  })\n};\n")),(0,r.kt)("p",null,"However, this field is somehow limited in that it cannot depend on ",(0,r.kt)("inlineCode",{parentName:"p"},"tnode")," attributes.\nThis is where ",(0,r.kt)(o.Z,{name:"HTMLElementModel",member:"getReactNativeProps",mdxType:"APIReference"})," comes to the rescue!"),(0,r.kt)("h3",{id:"getreactnativeprops"},(0,r.kt)("inlineCode",{parentName:"h3"},"getReactNativeProps")),(0,r.kt)("p",null,"The purpose of this field is identical to ",(0,r.kt)(o.Z,{name:"HTMLElementModel",member:"reactNativeProps",mdxType:"APIReference"})," field. It only differs in that instead of a plain\nobject, it is a method which takes three arguments. A ",(0,r.kt)("inlineCode",{parentName:"p"},"tnode")," (the Transient Node),\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"preGeneratedProps")," (props generated by the TRE such as accessibility props, see next section)\nand and ",(0,r.kt)("inlineCode",{parentName:"p"},"element")," (the DOM node). Finally, it returns a plain object (see ",(0,r.kt)(o.Z,{name:"ReactNativePropsDefinitions",mdxType:"APIReference"}),")."),(0,r.kt)("p",null,"In the example below, a custom ",(0,r.kt)("inlineCode",{parentName:"p"},"nav-widget")," tag is registered. This time, we\nare handling ",(0,r.kt)("inlineCode",{parentName:"p"},"onPress")," events conditionally, based on attributes of the\n",(0,r.kt)("inlineCode",{parentName:"p"},"tnode"),". The snippets uses a phony API, ",(0,r.kt)("inlineCode",{parentName:"p"},"appNavigatorController"),", to navigate\nbetween screens. Such API is easy to implement with a globally-defined ref to a\n",(0,r.kt)("a",{parentName:"p",href:"https://reactnavigation.org"},(0,r.kt)("inlineCode",{parentName:"a"},"react-navigation")),' "navigation" object.'),(0,r.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"It is worth noting that you cannot use React hooks in those element models\nfunctions. But you can use any ad-hoc API to emit events, and glue that logic\nto hooks. If you really need React hooks, it might be simple to ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/custom-renderers#component-based-custom-rendering"},"create a custom\ncomponent renderer"),"."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Defining React Native props based on the TNode in an HTML element model"',title:'"Defining',React:!0,Native:!0,props:!0,based:!0,on:!0,the:!0,TNode:!0,in:!0,an:!0,HTML:!0,element:!0,'model"':!0},"import RenderHTML, {\n  HTMLContentModel,\n  HTMLElementModel\n} from 'react-native-render-html';\nimport appNavigatorController from './appNavigatorController';\n\n// The eponym prop to pass to RenderHTML\nconst customHTMLElementModels = {\n  'nav-widget': HTMLElementModel.fromCustomModel({\n    tagName: 'nav-widget',\n    contentModel: HTMLContentModel.block,\n    getReactNativeProps(tnode) {\n      return {\n        native: {\n          accessibilityRole: 'link',\n          onPress() {\n            const targetScreen = tnode.attributes['data-target'];\n            const targetParams = tnode.attributes['data-params'];\n            appNavigatorController.navigate(\n              targetScreen,\n              targetParams ? JSON.parse(targetParams) : null\n            );\n          }\n        }\n      };\n    }\n  })\n};\n")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Don't forget that you can mix model-based and component-based rendering!"))),(0,r.kt)("h2",{id:"a-focus-on-accessibility"},"A Focus on Accessibility"),(0,r.kt)("p",null,"Screen readers integration has been worked on sparsely since the Foundry\nrelease, by addressing issues raised by the community, but until v6.2 there has\nnot been structural improvements to cover the full range of required features.\nThanks to the new Transient Render Engine, it has become very easy to define\ntranslations from HTML attributes to React Native props within the engine.\nLet's find out what's new!"),(0,r.kt)("h3",{id:"support-for-aria-label-and-role-attributes"},"Support for ",(0,r.kt)("inlineCode",{parentName:"h3"},"aria-label")," and ",(0,r.kt)("inlineCode",{parentName:"h3"},"role")," Attributes"),(0,r.kt)("p",null,"On one hand, ",(0,r.kt)(s.Z,{type:"html-attr",url:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-label_attribute",name:"aria-label",mdxType:"Reference"}),"\nis used to hint screen readers on how a specific node ",(0,r.kt)("strong",{parentName:"p"},"and all its descendants")," should be read out loud. It is especially\nuseful to handle icons which don't have inner semantic meanings. This attribute has a React Native prop equivalent, namely\n",(0,r.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/accessibility#accessibilitylabel"},(0,r.kt)("inlineCode",{parentName:"a"},"accessibilityLabel")),", which serves the same purpose.\nOn the other hand, ",(0,r.kt)(s.Z,{type:"html-attr",url:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles",name:"role",mdxType:"Reference"}),"\ninforms the screen reader of the target element nature and how a user might interact with it.\nThis attributes roughly maps to React Native ",(0,r.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/accessibility#accessibilityrole"},(0,r.kt)("inlineCode",{parentName:"a"},"accessibilityRole")),"\nprop, although the set of allowed values slightly differs.\nSee ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/native-html/core/blob/00c0cd1034c4cb721e991d5c02b232c4d64eae3d/packages/transient-render-engine/src/tree/TNodeCtor.ts#L33"},"all supported roles and their mapping\nhere"),"."),(0,r.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Remember that a majority of interactive elements will not be rendered by this library. You must change their\ncontent model to ",(0,r.kt)(o.Z,{name:"HTMLContentModel",member:"block",mdxType:"APIReference"})," in order for them to be rendered.\nNevertheless, those interactive element models are already shipped with the appropriate ",(0,r.kt)("inlineCode",{parentName:"p"},"accessibilityRole")," prop."))),(0,r.kt)("p",null,"The new Transient Render Engine will from now on\ntranslate both attributes to their React Native counterparts."),(0,r.kt)("h3",{id:"accessible-a-tags"},"Accessible ",(0,r.kt)("inlineCode",{parentName:"h3"},"<a>")," Tags"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"<a>")," tags now receive an ",(0,r.kt)("inlineCode",{parentName:"p"},'accessibilityRole="link"')," prop when their ",(0,r.kt)("inlineCode",{parentName:"p"},"href"),"\nattribute is non-empty. To link that part with model enhancements seen in\nthe previous section, let's see now how we could set ",(0,r.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/accessibility#accessibilityhint"},"an accessibility\nhint")," by\nextending the HTML model:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import RenderHTML, { defaultHTMLElementModels } from 'react-native-render-html';\n\n// The eponym prop to pass to RenderHTML\nconst customHTMLElementModels = {\n  a: defaultHTMLElementModels.a.extend((aModel) => ({\n    reactNativeProps: {\n      ...aModel.reactNativeProps,\n      native: {\n        ...aModel.reactNativeProps?.native,\n        accessibilityHint: 'Open in your system web browser.'\n      }\n    }\n  }))\n};\n")),(0,r.kt)("p",null,"Notice that ",(0,r.kt)(o.Z,{full:!0,name:"HTMLElementModel",member:"extend",mdxType:"APIReference"}),"\nmethod can now take a generator function. Pretty convenient to merge\nnested fields!"),(0,r.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Because of a ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react-native/issues/32004"},"React Native\nbug"),", nested\n",(0,r.kt)("inlineCode",{parentName:"p"},"Text")," elements are not accessible, which means that the screen reader will not\nbe able to identify ",(0,r.kt)("inlineCode",{parentName:"p"},"<a>")," tags as links when grouped with other textual\nelements. Below is an example:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<p>\n  Unfortunately,\n  <a href="https://domain.com">this hyperlink is not accessible</a>\n</p>\n')),(0,r.kt)("p",{parentName:"div"},"Luke Walczak from Callstack ",(0,r.kt)("a",{parentName:"p",href:"https://callstack.com/blog/react-native-android-accessibility-tips/"},"explains how to circumvent this issue in a great\npost"),".\nUnfortunately, this workaround cannot be genericized and we will have to wait\nfor an upstream fix."))),(0,r.kt)("h3",{id:"enhanced-accessibility-for-img-tags"},"Enhanced Accessibility for ",(0,r.kt)("inlineCode",{parentName:"h3"},"<img>")," Tags"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"<img>")," tags have been accessible since the Foundry beta. But the accessibility\nprops were set after the loading was complete. We have found that changing\naccessibility annotations on the fly can degrade aural\nexperiences and have provided a fix."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},(0,r.kt)("inlineCode",{parentName:"p"},'accessibilityRole="image"')," will be set for ",(0,r.kt)("inlineCode",{parentName:"p"},"<img>")," only when either ",(0,r.kt)("inlineCode",{parentName:"p"},"alt")," or\n",(0,r.kt)("inlineCode",{parentName:"p"},"aria-label")," attribute is present."))),(0,r.kt)("h3",{id:"accessible-h1-6-tags"},"Accessible ",(0,r.kt)("inlineCode",{parentName:"h3"},"<h1-6>")," Tags"),(0,r.kt)("p",null,"React Native has a \u201cheader\u201d accessibility role which screen reader users depend\non widely to identify quickly the content hierarchy of a screen. Until this\nrelease, ",(0,r.kt)("inlineCode",{parentName:"p"},"react-native-render-html")," did not pass the appropriate role to\nheading tags."),(0,r.kt)("h2",{id:"other-enhancements"},"Other Enhancements"),(0,r.kt)("h3",{id:"support-for-user-select-css-property"},"Support for ",(0,r.kt)("inlineCode",{parentName:"h3"},"user-select")," CSS property"),(0,r.kt)("p",null,"With the new Transient Render Engine featuring React Native prop generation, it\nhas become very easy to pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"selectable")," prop to React Native ",(0,r.kt)("inlineCode",{parentName:"p"},"Text"),"\ncomponents based on the presence of ",(0,r.kt)("inlineCode",{parentName:"p"},"user-select")," CSS property. Usage example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<p style="user-select: none">\n  This line is not selectable.<br />\n  <span>Neither is that one.</span>\n</p>\n')),(0,r.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Please not that this is not full support. The TRE will map ",(0,r.kt)("inlineCode",{parentName:"p"},"user-select: none;")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"selectable={false}")," and\nany other value to ",(0,r.kt)("inlineCode",{parentName:"p"},"selectable={true}"),"."))),(0,r.kt)("h2",{id:"bonus-version-61-features"},"Bonus: Version 6.1 Features"),(0,r.kt)("p",null,"I didn't publish a release notes post for this version; I'm catching up\nhere! From now on, I will try to write up a post for each minor and major\nrelease."),(0,r.kt)("h3",{id:"enableexperimentalbrcollapsing-prop"},(0,r.kt)("inlineCode",{parentName:"h3"},"enableExperimentalBRCollapsing")," Prop"),(0,r.kt)("p",null,"This ",(0,r.kt)("strong",{parentName:"p"},"recommended prop")," allows consumers to circumvent a bug in the Foundry\nrelease where line breaks (",(0,r.kt)("inlineCode",{parentName:"p"},"<br>"),") would be printed erroneously, such\nas at the end of a paragraph. Its default it yet ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," to avoid introducing\nbreaking changes but it will be enabled by default in the next major\nrelease."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"learn more")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Read the complete explanation for this prop ",(0,r.kt)("a",{parentName:"p",href:"/docs/content/textual#line-breaks"},"in the textual content guide"),"."))),(0,r.kt)("h3",{id:"enableexperimentalghostlinesprevention-prop"},(0,r.kt)("inlineCode",{parentName:"h3"},"enableExperimentalGhostLinesPrevention")," Prop"),(0,r.kt)("p",null,"This ",(0,r.kt)("strong",{parentName:"p"},"recommended prop")," allows to circumvent ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react-native/issues/32062"},"a React Native\nbug")," where empty ",(0,r.kt)("inlineCode",{parentName:"p"},"Text"),"\nelements would be printed as ghost lines of fixed height (around 20 dpi). Its\ndefault it yet ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," to avoid introducing breaking changes but it will be\nenabled by default in the next major release."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"learn more")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Read the complete explanation for this prop ",(0,r.kt)("a",{parentName:"p",href:"/docs/content/textual#empty-tags"},"in the textual content guide"),"."))),(0,r.kt)("h3",{id:"provideembeddedheaders-prop"},(0,r.kt)("inlineCode",{parentName:"h3"},"provideEmbeddedHeaders")," Prop"),(0,r.kt)("p",null,"A function prop which allows to generate HTTP headers for\nremote resources. It currently works with ",(0,r.kt)("inlineCode",{parentName:"p"},"<img>")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"<iframe>")," tags (since version 2.6 of the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/native-html/plugins/tree/master/packages/iframe-plugin#readme"},(0,r.kt)("inlineCode",{parentName:"a"},"@native-html/iframe-plugin"))," library)."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"learn more")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"See for example how it can be used with images ",(0,r.kt)("a",{parentName:"p",href:"/docs/content/images#providing-headers"},"in the image content guide"),"."))),(0,r.kt)("h3",{id:"bypassanonymoustphrasingnodes-prop"},(0,r.kt)("inlineCode",{parentName:"h3"},"bypassAnonymousTPhrasingNodes")," Prop"),(0,r.kt)("p",null,"This prop, ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," by default, makes the React rendering layer bypass grouping\n(anonymous) ",(0,r.kt)("inlineCode",{parentName:"p"},"TPhrasing")," nodes which have only one child. It is best understood by\nexample. For instance, the following HTML snippet:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<p>A sentence.</p>\n")),(0,r.kt)("p",null,"will produce the below Transient Render Tree:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<TBlock tagName="p">\n  <TPhrasing>\n    <TText>A sentence.</TText>\n  </TPhrasing>\n</TBlock>\n')),(0,r.kt)("p",null,"which by default rendering rules, would be translated to the below React render tree:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<View>\n  <Text>\n    <Text>A sentence.</Text>\n  </Text>\n</View>\n")),(0,r.kt)("p",null,"However, when ",(0,r.kt)("inlineCode",{parentName:"p"},"bypassAnonymousTPhrasingNodes")," prop is ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," (the default),\nthe render tree will be simplified to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<View>\n  <Text>A sentence.</Text>\n</View>\n")),(0,r.kt)("p",null,"This behavior is preferred for many reasons. The most simple one is that it\nsimplifies the render tree. The less React elements there are, the best it is\nperformance-wise. Moreover, there are a lot of React Native bugs related to\nnested ",(0,r.kt)("inlineCode",{parentName:"p"},"Text")," nodes, so this simplification limits the number of occurrences\nof those bugs."),(0,r.kt)("h2",{id:"learn-more"},"Learn More"),(0,r.kt)("p",null,"Check out ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/meliorence/react-native-render-html/releases/tag/v6.2.0"},"the release notes in the official repository"),".\nMoreover, if you encounter any issue while upgrading from a lower minor (6.0.x, 6.1.x), you are welcome to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/meliorence/react-native-render-html/issues/526"},"comment this Github issue"),"!"),(0,r.kt)(l.Z,{twitterUrl:"https://twitter.com/jsamrn/status/1452137777508667397",redditUrl:"https://www.reddit.com/r/reactnative/comments/qe9pam/checkout_whats_new_in_react_native_render_html_v62/",mdxType:"SocialLinks"}))}v.isMDXComponent=!0}}]);